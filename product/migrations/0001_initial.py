# Generated by Django 3.2.5 on 2021-08-03 11:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('category_name', models.CharField(help_text='Name of Category', max_length=100, verbose_name='Category Name')),
                ('depth', models.PositiveSmallIntegerField(help_text='Depth of category, include 1, 2 and 3', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='Depth')),
                ('category_url', models.FileField(blank=True, default=None, help_text='Url of category images on os.', null=True, upload_to='category_img/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gif', 'png', 'jpg', 'jpeg'])], verbose_name='Category Url')),
                ('parent_category', models.ForeignKey(blank=True, help_text='Category of Parent', null=True, on_delete=django.db.models.deletion.CASCADE, to='product.category', verbose_name='Parent Category')),
            ],
            options={
                'ordering': ['-depth'],
            },
        ),
        migrations.CreateModel(
            name='CategoryAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('attribute_name', models.CharField(help_text='Name of attribute', max_length=100, verbose_name='Attribute Name')),
                ('attribute_description', models.CharField(blank=True, default=None, help_text='Description of attribute', max_length=100, null=True, verbose_name='Attribute Description')),
                ('attribute_value', models.CharField(help_text='Value of attribute', max_length=100, verbose_name='Value')),
                ('category_id', models.ForeignKey(help_text='Category of Attribute', on_delete=django.db.models.deletion.CASCADE, to='product.category', verbose_name='Category')),
            ],
            options={
                'ordering': ['attribute_name'],
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('manufacturer_name', models.CharField(help_text='Name of Manufacturer, like: Samsung, LG and etc.', max_length=100, verbose_name='Manufacturer Name')),
                ('logo_url', models.FileField(blank=True, default=None, help_text='Url of manufacturer logo on os.', null=True, upload_to='manufacturer_logo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gif', 'png', 'jpg', 'jpeg'])], verbose_name='Logo Url')),
            ],
            options={
                'ordering': ['manufacturer_name'],
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('product_name', models.CharField(help_text='Name of Product', max_length=100, verbose_name='Product Name')),
                ('product_description', models.CharField(blank=True, default=None, help_text='Description of product', max_length=100, null=True, verbose_name='Product Description')),
                ('product_url', models.FileField(blank=True, default=None, help_text='Url of product images on os.', null=True, upload_to='product_img/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gif', 'png', 'jpg', 'jpeg'])], verbose_name='Product Url')),
                ('category_id', models.ForeignKey(help_text='Category of Product', on_delete=django.db.models.deletion.CASCADE, to='product.category', verbose_name='Category')),
                ('manufacturer_id', models.ForeignKey(help_text='Manufacturer of Product', on_delete=django.db.models.deletion.CASCADE, to='product.manufacturer', verbose_name='Manufacturer')),
            ],
            options={
                'ordering': ['product_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('price_adjustment', models.FloatField(help_text='Adjustment of product price', verbose_name='Price Adjustment')),
                ('is_fixed', models.BooleanField(help_text='Adjustment of product price is percent.', verbose_name='Percent Adjustment')),
                ('is_available', models.BooleanField(help_text='IS Product Available?', verbose_name='Product Available')),
                ('category_attribute_value_id', models.ForeignKey(help_text='Category of Product', on_delete=django.db.models.deletion.CASCADE, to='product.categoryattributevalue', verbose_name='Category')),
                ('products_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.products')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('price', models.PositiveIntegerField(help_text='Price of Product', verbose_name='Price')),
                ('is_used', models.BooleanField(help_text='Price that used in present time.', verbose_name='Price Now')),
                ('start_date', models.DateField(help_text='From Date Price', verbose_name='From Date')),
                ('end_date', models.DateField(help_text='To Date Price', verbose_name='To Date')),
                ('products_id', models.ForeignKey(help_text='Name of Product', on_delete=django.db.models.deletion.CASCADE, to='product.products', verbose_name='Product')),
            ],
            options={
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('discount', models.PositiveIntegerField(help_text='Discount of Product', verbose_name='Discount')),
                ('discount_name', models.CharField(help_text='Name of Discount', max_length=100, verbose_name='Discount Name')),
                ('is_fixed', models.BooleanField(help_text='discount of product price is percent', verbose_name='Percent')),
                ('start_date', models.DateField(help_text='From Date Discount', verbose_name='From Date')),
                ('end_date', models.DateField(help_text='To Date Discount', verbose_name='To Date')),
                ('products_id', models.ForeignKey(help_text='Name of Product', on_delete=django.db.models.deletion.CASCADE, to='product.products', verbose_name='Product')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
